{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "go_getting_started",
            "type": "go",
            "request": "launch",
            "mode": "debug",
            "program": "${workspaceFolder}/scenarios/getting_started/go/getting_started.go",
            "args": [
                "${workspaceFolder}/scenarios/getting_started/.env"
            ],
            "cwd": "${workspaceFolder}/scenarios/getting_started/"
        },
        {
            "name": "getting_started/dotnet",
            "type": "coreclr",
            "request": "launch",
            "preLaunchTask": "build_getting_started",
            "program": "${workspaceFolder}/scenarios/getting_started/dotnet/getting_started/bin/Debug/net7.0/getting_started.dll",
            "args": [],
            "cwd": "${workspaceFolder}/scenarios/getting_started",
            "console": "integratedTerminal",
            "stopAtEntry": false,
            "envFile": "${workspaceFolder}/scenarios/getting_started/.env",
            "presentation": {
                "group": "dotnet"
            }
        },
        {
            "name": "telemetry_producer/dotnet",
            "type": "coreclr",
            "request": "launch",
            "preLaunchTask": "build_telemetry",
            "program": "${workspaceFolder}/scenarios/telemetry/dotnet/telemetry_producer/bin/Debug/net7.0/telemetry_producer.dll",
            "cwd": "${workspaceFolder}/scenarios/telemetry/",
            "args": [
                "--envFile",
                "vehicle01.env"
            ],
            "console": "integratedTerminal",
            "stopAtEntry": false,
            "presentation": {
                "group": "dotnet"
            }
        },
        {
            "name": "telemetry_consumer/dotnet",
            "type": "coreclr",
            "request": "launch",
            "preLaunchTask": "build_telemetry",
            "program": "${workspaceFolder}/scenarios/telemetry/dotnet/telemetry_consumer/bin/Debug/net7.0/telemetry_consumer.dll",
            "cwd": "${workspaceFolder}/scenarios/telemetry/",
            "args": [
                "--envFile",
                "map-app.env"
            ],
            "console": "integratedTerminal",
            "stopAtEntry": false,
            "presentation": {
                "group": "dotnet"
            }
        },
        {
            "name": "command_consumer/dotnet",
            "type": "coreclr",
            "request": "launch",
            "preLaunchTask": "build_command",
            "program": "${workspaceFolder}/scenarios/command/dotnet/command_consumer/bin/Debug/net7.0/command_consumer.dll",
            "args": [
                "--envFile",
                "mobile-app.env"
            ],
            "cwd": "${workspaceFolder}/scenarios/command/",
            "console": "integratedTerminal",
            "stopAtEntry": false,
            "presentation": {
                "group": "dotnet"
            }
        },
        {
            "name": "command_producer/dotnet",
            "type": "coreclr",
            "request": "launch",
            "preLaunchTask": "build_command",
            "program": "${workspaceFolder}/scenarios/command/dotnet/command_producer/bin/Debug/net7.0/command_producer.dll",
            "args": [
                "--envFile",
                "vehicle03.env"
            ],
            "cwd": "${workspaceFolder}/scenarios/command/",
            "console": "integratedTerminal",
            "stopAtEntry": false,
            "presentation": {
                "group": "dotnet"
            }
        },
        {
            "name": "C Getting Started",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/scenarios/getting_started/c/build/getting_started",
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/scenarios/getting_started",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "Build C Getting Started",
            "presentation": {
                "order": 1,
                "group": "C"
            }
        },
        {
            "name": "C Telemetry Producer",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/scenarios/telemetry/c/build/telemetry_producer",
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/scenarios/telemetry",
            "args": [
                "${workspaceFolder}/scenarios/telemetry/vehicle01.env"
            ],
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "Build C Telemetry",
            "presentation": {
                "order": 4,
                "group": "C"
            }
        },
        {
            "name": "C Telemetry Consumer",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/scenarios/telemetry/c/build/telemetry_consumer",
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/scenarios/telemetry",
            "args": [
                "${workspaceFolder}/scenarios/telemetry/map-app.env"
            ],
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "Build C Telemetry",
            "presentation": {
                "order": 5,
                "group": "C"
            }
        },
        {
            "name": "C Command Client",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/scenarios/command/c/build/command_client",
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/scenarios/command",
            "args": [
                "${workspaceFolder}/scenarios/command/mobile-app.env"
            ],
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "Build C Command",
            "presentation": {
                "order": 6,
                "group": "C"
            }
        },
        {
            "name": "C Command Server",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/scenarios/command/c/build/command_server",
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/scenarios/command",
            "args": [
                "${workspaceFolder}/scenarios/command/vehicle03.env"
            ],
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "Build C Command",
            "presentation": {
                "order": 7,
                "group": "C"
            }
        },
        {
            "name": "TypeScript Getting Started",
            "type": "node",
            "request": "launch",
            "preLaunchTask": "build_ts_getting_started",
            "program": "${workspaceFolder}/scenarios/getting_started/ts/gettingStarted/src/index.ts",
            "args": [],
            "envFile": "${workspaceFolder}/scenarios/getting_started/.env",
            "cwd": "${workspaceFolder}/scenarios/getting_started/ts/gettingStarted",
            "console": "integratedTerminal",
            "smartStep": true,
            "showAsyncStacks": true,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/mqttclients/ts/mqttjsClientExtensions/dist/**/*.js",
                "${workspaceFolder}/scenarios/getting_started/ts/gettingStarted/dist/**/*.js"
            ],
            "skipFiles": [
                "<node_internals>/**"
            ],
            "presentation": {
                "group": "ts"
            }
        },
        {
            "name": "TypeScript Telemetry",
            "type": "node",
            "request": "launch",
            "preLaunchTask": "build_ts_telemetry",
            "program": "${workspaceFolder}/scenarios/telemetry/ts/telemetry/src/index.ts",
            "args": [
                "--env-file",
                "vehicle01.env"
            ],
            "cwd": "${workspaceFolder}/scenarios/telemetry/ts/telemetry",
            "console": "integratedTerminal",
            "smartStep": true,
            "showAsyncStacks": true,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/mqttclients/ts/mqttjsClientExtensions/dist/**/*.js",
                "${workspaceFolder}/scenarios/telemetry/ts/telemetry/dist/**/*.js"
            ],
            "skipFiles": [
                "<node_internals>/**"
            ],
            "presentation": {
                "group": "ts"
            }
        },
        {
            "name": "TypeScript Command",
            "type": "node",
            "request": "launch",
            "preLaunchTask": "build_ts_command",
            "program": "${workspaceFolder}/scenarios/command/ts/command/src/index.ts",
            "args": [],
            "cwd": "${workspaceFolder}/scenarios/command/ts/command",
            "console": "integratedTerminal",
            "smartStep": true,
            "showAsyncStacks": true,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/mqttclients/ts/mqttjsClientExtensions/dist/**/*.js",
                "${workspaceFolder}/scenarios/command/ts/command/dist/**/*.js"
            ],
            "skipFiles": [
                "<node_internals>/**"
            ],
            "presentation": {
                "group": "ts"
            }
        },
        {
            "name": "TypeScript Alert",
            "type": "node",
            "request": "launch",
            "preLaunchTask": "build_ts_alert",
            "program": "${workspaceFolder}/scenarios/alert/ts/alert/src/index.ts",
            "args": [],
            "cwd": "${workspaceFolder}/scenarios/alert/ts/alert",
            "console": "integratedTerminal",
            "smartStep": true,
            "showAsyncStacks": true,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceFolder}/mqttclients/ts/mqttjsClientExtensions/dist/**/*.js",
                "${workspaceFolder}/scenarios/alert/ts/alert/dist/**/*.js"
            ],
            "skipFiles": [
                "<node_internals>/**"
            ],
            "presentation": {
                "group": "ts"
            }
        }
    ],
    "compounds": [
        {
            "name": "telemetry/dotnet",
            "configurations": [
                "telemetry_producer/dotnet",
                "telemetry_consumer/dotnet"
            ],
            "presentation": {
                "group": "dotnet"
            }
        },
        {
            "name": "command/dotnet",
            "configurations": [
                "command_producer/dotnet",
                "command_consumer/dotnet"
            ],
            "presentation": {
                "group": "dotnet"
            }
        },
        {
            "name": "C Telemetry",
            "configurations": [
                "C Telemetry Consumer",
                "C Telemetry Producer"
            ],
            "stopAll": true,
            "presentation": {
                "order": 2,
                "group": "C"
            }
        },
        {
            "name": "C Command",
            "configurations": [
                "C Command Server",
                "C Command Client"
            ],
            "stopAll": true,
            "presentation": {
                "order": 3,
                "group": "C"
            }
        }
    ]
}